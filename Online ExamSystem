import java.util.Scanner;

class User {
    String username;
    String password;
    String profile;

    // Constructor to initialize user details
    public User(String username, String password, String profile) {
        this.username = username;
        this.password = password;
        this.profile = profile;
    }
}

class MCQ {
    String question;
    String[] options;
    int correctAnswer;

    public MCQ(String question, String[] options, int correctAnswer) {
        this.question = question;
        this.options = options;
        this.correctAnswer = correctAnswer;
    }
}

public class OnlineExamSystem {
    static User currentUser;
    static int score;

    public static void main(String[] args) {
        initializeUsers(); // You would replace this with user data from a database
        login();
        updateProfileAndPassword();
        takeExam();
        displayResult();
    }

    // Sample user data
    static User[] users = {
            new User("user1", "password1", "Student"),
            new User("user2", "password2", "Teacher")
    };

    static MCQ[] questions = {
            new MCQ("What is the capital of France?", new String[]{"A. London", "B. Paris", "C. Berlin", "D. Rome"}, 1),
            new MCQ("Which programming language is Java?", new String[]{"A. Compiled", "B. Interpreted", "C. Assembly", "D. Machine Code"}, 1),
            // Add more questions as needed
    };

    static Scanner scanner = new Scanner(System.in);

    static void initializeUsers() {
        // You can replace this with a database query to fetch user data
        // For simplicity, we are using hardcoded data here.
    }

    static void login() {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        for (User user : users) {
            if (user.username.equals(username) && user.password.equals(password)) {
                currentUser = user;
                System.out.println("Login successful. Welcome, " + currentUser.username + "!");
                return;
            }
        }

        System.out.println("Invalid username or password. Exiting.");
        System.exit(0);
    }

    static void updateProfileAndPassword() {
        if (currentUser == null) {
            System.out.println("Please login first.");
            return;
        }

        System.out.println("Current Profile: " + currentUser.profile);
        System.out.print("Enter new profile: ");
        String newProfile = scanner.nextLine();
        currentUser.profile = newProfile;

        System.out.print("Enter new password: ");
        String newPassword = scanner.nextLine();
        currentUser.password = newPassword;

        System.out.println("Profile and password updated successfully.");
    }

    static void takeExam() {
        if (currentUser == null) {
            System.out.println("Please login first.");
            return;
        }

        score = 0;

        System.out.println("\n------ Online Exam ------");
        for (MCQ question : questions) {
            displayQuestion(question);
            int userAnswer = getSelectedOption(question.options.length);

            if (userAnswer == question.correctAnswer) {
                System.out.println("Correct!\n");
                score++;
            } else {
                System.out.println("Incorrect. The correct answer is: " + question.options[question.correctAnswer - 1] + "\n");
            }
        }
    }

    static void displayQuestion(MCQ question) {
        System.out.println(question.question);
        for (String option : question.options) {
            System.out.println(option);
        }
    }

    static int getSelectedOption(int optionsCount) {
        int userAnswer = 0;

        while (true) {
            System.out.print("Select an option (1-" + optionsCount + "): ");
            try {
                userAnswer = Integer.parseInt(scanner.nextLine());
                if (userAnswer >= 1 && userAnswer <= optionsCount) {
                    break;
                } else {
                    System.out.println("Invalid option. Please enter a number between 1 and " + optionsCount + ".");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number.");
            }
        }

        return userAnswer;
    }

    static void displayResult() {
        if (currentUser == null) {
            System.out.println("Please login first.");
            return;
        }

        System.out.println("\n------ Result ------");
        System.out.println("Hello, " + currentUser.username + "!");
        System.out.println("Your score is: " + score + "/" + questions.length);
        System.out.println("Thank you for taking the exam. Logout to exit.");
    }
}
